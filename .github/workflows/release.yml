name: Deploy to ArgoCD

on:
  workflow_dispatch:  # Allows manual trigger
    inputs:
      image_tag:
        description: 'Image tag to deploy (optional - defaults to latest)'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: self-hosted
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'

    permissions:
      contents: write
      packages: read

    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest image by timestamp
        id: get_tag
        run: |
          # Get the latest image by timestamp using GitHub API
          PACKAGE_NAME=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          
          # Query GitHub Container Registry API for package versions
          LATEST_VERSION=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/user/packages/container/${PACKAGE_NAME}/versions" | \
            jq -r 'sort_by(.created_at) | reverse | .[0].metadata.container.tags[0]')
          
          if [ "$LATEST_VERSION" != "null" ] && [ -n "$LATEST_VERSION" ]; then
            IMAGE_TAG="$LATEST_VERSION"
          else
            IMAGE_TAG="latest"
          fi
          
          
          FULL_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "full_image=${FULL_IMAGE}" >> $GITHUB_OUTPUT
          echo "Deploying image: ${FULL_IMAGE}"

      - name: Pull latest image
        run: |
          docker pull ${{ steps.get_tag.outputs.full_image }}
          echo "Successfully pulled image: ${{ steps.get_tag.outputs.full_image }}"

      - name: Checkout ArgoCD state repository
        uses: actions/checkout@v4
        with:
          repository: github.com/argo-state-repo
          token: ${{ secrets.GITHUB_TOKEN }}
          path: argo-repo

      - name: Update Kubernetes manifests
        run: |
          # Get project name from repository name
          PROJECT_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          
          # Update the image placeholder in your K8s manifests
          sed -i "s|IMAGE_PLACEHOLDER|${{ steps.get_tag.outputs.full_image }}|g" argo-repo/${PROJECT_NAME}/k8s/deployment.yaml
          
          echo "Updated image to: ${{ steps.get_tag.outputs.full_image }}"
          
          # Show the changes
          cd argo-repo
          git diff ${PROJECT_NAME}/k8s/deployment.yaml

      - name: Commit and push changes to ArgoCD repo
        run: |
          cd argo-repo
          PROJECT_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add ${PROJECT_NAME}/k8s/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Deploy ${PROJECT_NAME} image: ${{ steps.get_tag.outputs.image_tag }}"
            git push
          fi